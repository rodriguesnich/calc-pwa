[{"/home/dash/Code/calc-pwa/src/index.js":"1","/home/dash/Code/calc-pwa/src/App.js":"2","/home/dash/Code/calc-pwa/src/components/Screen/index.js":"3","/home/dash/Code/calc-pwa/src/components/Keyboard/index.js":"4"},{"size":244,"mtime":1614260418699,"results":"5","hashOfConfig":"6"},{"size":3957,"mtime":1614260418699,"results":"7","hashOfConfig":"6"},{"size":277,"mtime":1612145465380,"results":"8","hashOfConfig":"6"},{"size":2154,"mtime":1612182220306,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"lielyw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dash/Code/calc-pwa/src/index.js",[],["21","22"],"/home/dash/Code/calc-pwa/src/App.js",["23","24","25","26"],"import React from 'react';\nimport { evaluate } from 'mathjs'\n\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { operation: \"\", result: \"\", hasParent: false };\n    this.handleClick = this.handleClick.bind(this);\n    this.eval = this.eval.bind(this);\n    this.erase = this.erase.bind(this);\n    this.percent = this.percent.bind(this);\n    this.parent = this.parent.bind(this);\n    this.clean = this.clean.bind(this);\n  }\n\n  eval() {\n    let buffer = evaluate(this.state.operation)\n    this.setState({ result: buffer })\n  };\n\n  erase() {\n    this.setState({ operation: \"\", result: \"\" })\n  };\n\n  clean() {\n    let buffer = this.state.operation\n    buffer = buffer.slice(0, -1)\n    this.setState({ operation: buffer })\n  }\n\n  parent() {\n    if (this.state.hasParent === false) {\n      let buffer = this.state.operation += \"(\"\n      this.setState({ operation: buffer })\n      this.setState({hasParent:true})\n    } else {\n      let buffer = this.state.operation += \")\"\n      this.setState({ operation: buffer })\n      this.setState({hasParent:false})\n    }\n  };\n\n  handleClick = (e, value) => {\n    if (this.state.result !== \"\") {\n      this.setState({operation: this.state.result + e, result: \"\"})\n      console.log(this.state.operation);\n    }else {\n      let buffer = this.state.operation += e\n      this.setState({ operation: buffer })\n    }\n  };\n\n  percent = (e, value) => {\n    // copy of state operation\n    let opt = this.state.operation\n    // printing % for user\n    let buffer2 = this.state.operation += e\n    this.setState({ operation: buffer2 })\n    // doin real operation\n    let buffer = opt.split(/[+|/|*|-]/);\n    let per = Number(buffer[0]) - ((Number(buffer[buffer.length - 1]) / Number(buffer[0])) * 100)\n    this.setState({ result: per })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Screen container\">\n          <textarea className=\"operation\" value={this.state.operation} type=\"text\" readOnly />\n          <textarea className=\"result\" value={this.state.result} type=\"number\" readOnly />\n        </div>\n\n        <div className=\"Keyboard\">\n          <button className=\"Button\" onClick={this.erase}>C</button>\n          <button className=\"Button\" onClick={this.parent}>()</button>\n          <button className=\"Button\" onClick={this.percent.bind(this, \"%\")}>%</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"/\")}>/</button>\n\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"7\")}>7</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"8\")}>8</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"9\")}>9</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"*\")}>x</button>\n\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"4\")}>4</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"5\")}>5</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"6\")}>6</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"+\")}>+</button>\n\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"1\")}>1</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"2\")}>2</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"3\")}>3</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"-\")}>-</button>\n\n          <button className=\"Button\" onClick={this.clean}>|</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \"0\")}>0</button>\n          <button className=\"Button\" onClick={this.handleClick.bind(this, \".\")}>.</button>\n          <button className=\"Button\" onClick={this.eval}>=</button>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/dash/Code/calc-pwa/src/components/Screen/index.js",[],["27","28"],"/home/dash/Code/calc-pwa/src/components/Keyboard/index.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":37,"column":20,"nodeType":"36","endLine":37,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":41,"column":20,"nodeType":"36","endLine":41,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":52,"column":20,"nodeType":"36","endLine":52,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":61,"column":19,"nodeType":"36","endLine":61,"endColumn":29},{"ruleId":"30","replacedBy":"37"},{"ruleId":"32","replacedBy":"38"},{"ruleId":"34","severity":1,"message":"35","line":17,"column":18,"nodeType":"36","endLine":17,"endColumn":28},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["39"],["40"],"no-global-assign","no-unsafe-negation"]