{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","calculation","SetCalculation","result","SetResult","Screen","className","type","value","KeyBoard","handleClick","event","console","log","currentTarget","textContent","buffer","onClick","calc","String","evaluate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAmFeA,MA9Ef,WAAgB,IAAD,EACyBC,mBAAS,IADlC,mBACNC,EADM,KACOC,EADP,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAKf,SAASC,IACP,OACE,sBAAKC,UAAU,SAAf,UACE,uBAAOC,KAAK,OAAOC,MAAOP,IAC1B,0BAAUO,MAAOL,OAKvB,SAASM,IAEP,SAASC,EAAYC,GACnBC,QAAQC,IAAIF,EAAMG,cAAcC,aAChC,IAAIC,EAASf,EACbC,EAAec,GAAUL,EAAMG,cAAcC,aAe/C,OACE,sBAAKT,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQW,QARd,WACEb,EAAU,IACVF,EAAe,KAMX,gBACA,wCACA,uCACA,wBAAQe,QAASP,EAAjB,kBAEF,sBAAKJ,UAAU,cAAf,UACE,wBAAQW,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,kBAEF,sBAAKJ,UAAU,cAAf,UACE,wBAAQW,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,kBAEF,sBAAKJ,UAAU,cAAf,UACE,wBAAQW,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,kBAEF,sBAAKJ,UAAU,cAAf,UACE,uCACA,wBAAQW,QAASP,EAAjB,eACA,wBAAQO,QAASP,EAAjB,eACA,wBAAQO,QA1Cd,WACEL,QAAQC,IAAIZ,GACZ,IAAIiB,EAAOC,OAAOlB,GACdE,EAASiB,YAASF,GACtBd,EAAUD,IAsCN,qBAMN,OACE,sBAAKG,UAAU,MAAf,UACE,cAACD,EAAD,IACA,cAACI,EAAD,QCzENY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b06a5a9.chunk.js","sourcesContent":["import React, { useState, MouseEvent } from \"react\";\nimport { evaluate } from \"mathjs\";\nimport \"./App.css\";\n\n\nfunction App() {\n  const [calculation, SetCalculation] = useState('')\n  const [result, SetResult] = useState('')\n\n\nfunction Screen() {\n  return (\n    <div className=\"Screen\">\n      <input type=\"text\" value={calculation} />\n      <textarea value={result}></textarea>\n    </div>\n  );\n}\n\nfunction KeyBoard() {\n  \n  function handleClick(event: MouseEvent) {\n    console.log(event.currentTarget.textContent);\n    let buffer = calculation\n    SetCalculation(buffer += event.currentTarget.textContent)\n  }\n\n  function result() {\n    console.log(calculation);\n    let calc = String(calculation)\n    let result = evaluate(calc)\n    SetResult(result)\n  }\n\n  function clear() {\n    SetResult('')\n    SetCalculation('')\n  }\n\n  return (\n    <div className=\"Keyboard\">\n      <div className=\"button-line\">\n        <button onClick={clear}>ac</button>\n        <button>()</button>\n        <button>%</button>\n        <button onClick={handleClick}>/</button>\n      </div>\n      <div className=\"button-line\">\n        <button onClick={handleClick}>7</button>\n        <button onClick={handleClick}>8</button>\n        <button onClick={handleClick}>9</button>\n        <button onClick={handleClick}>*</button>\n      </div>\n      <div className=\"button-line\">\n        <button onClick={handleClick}>4</button>\n        <button onClick={handleClick}>5</button>\n        <button onClick={handleClick}>6</button>\n        <button onClick={handleClick}>-</button>\n      </div>\n      <div className=\"button-line\">\n        <button onClick={handleClick}>1</button>\n        <button onClick={handleClick}>2</button>\n        <button onClick={handleClick}>3</button>\n        <button onClick={handleClick}>+</button>\n      </div>\n      <div className=\"button-line\">\n        <button>r</button>\n        <button onClick={handleClick}>0</button>\n        <button onClick={handleClick}>.</button>\n        <button onClick={result}>=</button>\n      </div>\n    </div>\n  );\n}\n\n  return (\n    <div className=\"App\">\n      <Screen />\n      <KeyBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}